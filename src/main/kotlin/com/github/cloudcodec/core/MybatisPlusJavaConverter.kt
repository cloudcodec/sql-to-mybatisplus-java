package com.github.cloudcodec.core

import org.mybatis.generator.api.dom.java.*
import org.mybatis.generator.api.dom.java.render.TopLevelClassRenderer
import org.mybatis.generator.internal.util.JavaBeansUtil
import java.time.LocalDate
import java.util.*

object MybatisPlusJavaConverter {

    fun convert(tableInfos: List<TableInfo>, pkg: String): List<MybatisPlusThing> {
        return tableInfos.map { tableInfo ->
            generate(tableInfo, pkg)
        }
    }

    private fun generate(tableInfo: TableInfo, pkg: String): MybatisPlusThing {
        val entityName = JavaBeansUtil.getCamelCaseString(tableInfo.name.removePrefix("tb_"), true)

        val result = MybatisPlusThing(
            MyClass("$pkg.entity", "${entityName}DO"),
            MyClass("$pkg.mapper", "${entityName}Mapper"),
            MyClass("$pkg.dao", "${entityName}DAO"),
        )

        result.entity.content = generateEntity(result, tableInfo)
        result.mapper.content = generateMapper(result)
        result.dao.content = generateDAO(result)
        return result
    }


    private fun generateEntity(mybatisPlusThing: MybatisPlusThing, tableInfo: TableInfo): String {
        val clazz = TopLevelClass("${mybatisPlusThing.entity.pkg}.${mybatisPlusThing.entity.className}")
        clazz.visibility = JavaVisibility.PUBLIC
        // package, get from TopLevelClass's

        // import
        clazz.addImportedType("com.baomidou.mybatisplus.annotation.FieldFill")
        clazz.addImportedType("com.baomidou.mybatisplus.annotation.IdType")
        clazz.addImportedType("com.baomidou.mybatisplus.annotation.TableField")
        clazz.addImportedType("com.baomidou.mybatisplus.annotation.TableId")
        clazz.addImportedType("com.baomidou.mybatisplus.annotation.TableName")
        clazz.addImportedType("lombok.Data")
        clazz.addImportedType("java.util.Date")

        // javadoc
        addJavaDoc(clazz)

        // annotations
        clazz.addAnnotation("""@TableName(value="`${tableInfo.name}`",autoResultMap = true)""")
        clazz.addAnnotation("@Data")

        // fields
        tableInfo.columns.forEach { column ->
            val field = Field(JavaBeansUtil.getCamelCaseString(column.name, false), column.type)
            addPropertyComment(field, column.comment)
            if (column.primaryKey && column.autoGenerated) {
                field.addAnnotation("@TableId(type = IdType.AUTO)")
            }
            if (field.type.fullyQualifiedNameWithoutTypeParameters == Date::class.java.name && field.name == "createdTime") {
                field.addAnnotation("""@TableField(value = "`${column.name}`", fill = FieldFill.INSERT)""")
            } else if (field.type.fullyQualifiedNameWithoutTypeParameters == Date::class.java.name && field.name == "updatedTime") {
                field.addAnnotation("""@TableField(value = "`${column.name}`", fill = FieldFill.INSERT_UPDATE)""")
            } else {
                field.addAnnotation("""@TableField(value = "`${column.name}`")""")
            }
            field.type.importList.forEach { clazz.addImportedType(it) }
            clazz.addField(field)
        }

        return TopLevelClassRenderer().render(clazz)
    }


    private fun generateMapper(mybatisPlusThing: MybatisPlusThing): String {
        val clazz = TopLevelClass("${mybatisPlusThing.mapper.pkg}.${mybatisPlusThing.mapper.className}")
        clazz.visibility = JavaVisibility.PUBLIC
        // package, get from TopLevelClass's

        // import, get from superClassType.importList

        // javadoc
        addJavaDoc(clazz)

        // supper class
        val superClassType =
            FullyQualifiedJavaType("com.baomidou.mybatisplus.core.mapper.BaseMapper<${mybatisPlusThing.entity.pkg}.${mybatisPlusThing.entity.className}>")
        clazz.addSuperInterface(superClassType)
        superClassType.importList.forEach {
            clazz.addImportedType(FullyQualifiedJavaType(it))
        }

        return TopLevelClassRenderer().render(clazz)
    }

    private fun generateDAO(mybatisPlusThing: MybatisPlusThing): String {
        val clazz = TopLevelClass("${mybatisPlusThing.dao.pkg}.${mybatisPlusThing.dao.className}")
        clazz.visibility = JavaVisibility.PUBLIC
        // package, get from TopLevelClass's

        // import
        clazz.addImportedType("org.springframework.stereotype.Repository")

        // javadoc
        addJavaDoc(clazz)

        // annotations
        clazz.addAnnotation("@Repository")

        // supper class
        val superClassType =
            FullyQualifiedJavaType("com.baomidou.mybatisplus.extension.service.impl.ServiceImpl<${mybatisPlusThing.mapper.pkg}.${mybatisPlusThing.mapper.className},${mybatisPlusThing.entity.pkg}.${mybatisPlusThing.entity.className}>")
        superClassType.importList.forEach {
            clazz.addImportedType(it)
        }
        clazz.setSuperClass(superClassType)

        return TopLevelClassRenderer().render(clazz)
    }


    private fun addJavaDoc(clazz: JavaElement) {
        if (false) {
            val now = LocalDate.now()
            clazz.addJavaDocLine("/**")
            clazz.addJavaDocLine(" * @author username")
            clazz.addJavaDocLine(" * @date ${now.year}/${now.monthValue}/${now.dayOfMonth}")
            clazz.addJavaDocLine(" */")
        }
    }


    private fun addPropertyComment(field: Field, columnComment: String?) {
        if (columnComment != null) {
            field.addJavaDocLine("/**")
            field.addJavaDocLine(" * $columnComment")
            field.addJavaDocLine(" */")
        }
    }


}

